name: CI

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  format:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Format the code
        run: npm run format

      - name: Check format
        run: |
          if [ "$(git diff | wc -l)" -gt "0" ]; then
            echo "Code format is not correct. Please run \`npm run format\` and commit the results."
            exit 1
          fi

  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Install node modules
        run: npm clean-install

      - name: Build the project
        run: npm run build

      - name: Check synchronicity
        id: sync
        run: |
          if [ "$(git diff | wc -l)" -gt "0" ]; then
            echo "dist/ is out of sync with src/. Please run \`npm run build\` and commit the results."
            exit 1
          fi

  integration-smoke-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Run tests
        run: |
          npm run test
          npm run test-metadata

      - name: Generate Test Report
        uses: ./
        if: always()
        with:
          files: |
            test-data/*.xml
          title: "Test Results"
          summary: true
          result-types: "passed,skipped,xfailed,failed,xpassed,error"
          fail-on-empty: false

      - name: Generate Test Report with Metadata
        uses: ./
        if: always()
        with:
          files: |
            test-metadata-data/*.xml
          title: "Test Results with Metadata"
          summary: true
          result-types: "passed,skipped,xfailed,failed,xpassed,error"
          fail-on-empty: false
          metadata-fields: "Namespace,Type,Artifact"
          metadata-field-mapping: '{"Namespace": "Namespace", "Type": "Type", "Artifact": "Artifact"}'
